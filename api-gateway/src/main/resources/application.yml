spring:
  application:
    name: api-gateway
  data:
    redis:
      host: redis
      port: 6379
  cloud:
    gateway:
      routes:
        # Auth Service - публичные endpoints
        - id: auth-login
          uri: http://auth-service:8089 # 8091:8089
          predicates:
            - Path=/auth/login
          filters:
            - StripPrefix=1

        - id: auth-register
          uri: http://auth-service:8089
          predicates:
            - Path=/auth/register
          filters:
            - StripPrefix=1

        - id: auth-validate
          uri: http://auth-service:8089
          predicates:
            - Path=/auth/validate
          filters:
            - StripPrefix=1

        # User Service - защищенные endpoints
        - id: user-service
          uri: http://user-service:8088
          predicates:
            - Path=/users/**
          filters:
            - StripPrefix=1
            - name: JwtAuthFilter

        # Card Service - защищенные endpoints
        - id: card-service
          uri: http://card-service:8083 # ?????
          predicates:
            - Path=/cards/**
          filters:
            - StripPrefix=1
            - name: JwtAuthFilter

        # Order Service - защищенные endpoints
        - id: order-service
          uri: http://order-service:8099
          predicates:
            - Path=/orders/**
          filters:
            - StripPrefix=1
            - name: JwtAuthFilter

app:
  services:
    user-service:
      url: http://user-service:8088
    auth-service:
      url: http://auth-service:8089
    card-service:
      url: http://user-service:8088

server:
  port: 8080

jwt:
  secret: ${JWT_SECRET}
  issuer: "api-gateway"

logging:
  level:
    com.company.gateway: DEBUG