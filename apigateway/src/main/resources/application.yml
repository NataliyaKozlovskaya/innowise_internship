spring:
  config:
    import: optional:file:./src/main/resources/application-local.yml
  profiles:
    active: local
  application:
    name: api-gateway
  data:
    redis:
      host: redis
      port: 6379
  cloud:
    gateway:
      routes:
        # Auth Service
        - id: auth-login-public
          uri: http://auth-service:8089
          predicates:
            - Path=/auth/login
          filters:
            - StripPrefix=1

        - id: auth-register-public
          uri: http://auth-service:8089
          predicates:
            - Path=/auth/register
          filters:
            - StripPrefix=1

        - id: auth-validate-public
          uri: http://auth-service:8089
          predicates:
            - Path=/auth/validate
          filters:
            - StripPrefix=1

        - id: auth-service-protected
          uri: http://auth-service:8089
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1
#            - name: JwtAuthenticationFilter

        # User Service
        - id: user-register-public
          uri: http://user-service:8088
          predicates:
            - Path=/users/register
          filters:
            - StripPrefix=1

        - id: user-card-service-protected
          uri: http://user-service:8088
          predicates:
            - Path=/users/**, /cards/**
          filters:
            - StripPrefix=1
#            - name: JwtAuthenticationFilter

        # Order Service
        - id: order-service
          uri: http://order-service:8099
          predicates:
            - Path=/orders/**
          filters:
            - StripPrefix=1
#            - name: JwtAuthenticationFilter


app:
  services:
    user-service-url: http://user-service:8088
    auth-service-url: http://auth-service:8089
    card-service-url: http://user-service:8088
    order-service-url: http://order-service:8099

server:
  port: 8077

jwt:
  secret: ${JWT_SECRET}
  issuer: "api-gateway"

logging:
  level:
    com.company.gateway: DEBUG